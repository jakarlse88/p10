@using Abarnathy.BlazorClient.Client.Shared.Components
@using Abarnathy.BlazorClient.Client.Models
@using System.Security.Cryptography
@page "/patient/create"

<div class="container">

    <div class="col-12">

        <div class="row d-flex justify-content-center">
            <h2 class="mb-4 mt-4">Create</h2>
        </div>

        @if (OperationStatus == OperationStatus.Initial)
        {
            <FormWizard Id="PatientCreateForm" OnClick="@Submit">
                <FormWizardStep Name="Personalia">

                    <EditForm Model="PatientModel" OnSubmit="@Submit">

                        <DataAnnotationsValidator/>

                        <div class="form-group">
                            <label for="given-name-input">Given Name</label>
                            <InputText id="given-name-input" @bind-Value="@PatientModel.GivenName" placeholder="Given Name" class="form-control"/>
                            <ValidationMessage For="@(() => PatientModel.GivenName)" class="text-danger"/>
                        </div>

                        <div class="form-group">
                            <label for="family-name-input">Family Name</label>
                            <InputText id="family-name-input" @bind-Value="@PatientModel.FamilyName" placeholder="Family Name" class="form-control"/>
                            <ValidationMessage For="@(() => PatientModel.FamilyName)" class="text-danger"/>
                        </div>

                        <div class="form-group">
                            <label for="date-of-birth-input">Date of Birth</label>
                            <InputDate id="date-of-birth-input" @bind-Value="@PatientModel.DateOfBirth" placeholder="DD/MM/YYYY" class="form-control" aria-describedby="date-of-birth-input-help"/>
                            <small id="date-of-birth-input-help" class="text-muted">DD/MM/YYYY</small>
                            <ValidationMessage For="@(() => PatientModel.DateOfBirth)" class="text-danger"/>
                        </div>

                        <div class="form-group">
                            <label for="sex-input">Sex</label>
                            <InputSelect id="sex-input" @bind-Value="@PatientModel.Sex" class="form-control">
                                <option value="@SexEnum.Male">Male</option>
                                <option value="@SexEnum.Female">Female</option>
                            </InputSelect>
                            <ValidationMessage For="@(() => PatientModel.Sex)" class="text-danger"/>
                        </div>
                    </EditForm>
                </FormWizardStep>

                <FormWizardStep Name="Telephone">

                    <EditForm Model="PhoneNumberModel">

                        <DataAnnotationsValidator/>

                        <div class="form-group">
                            <label for="phone-number-input">Telephone Number</label>
                            <InputText id="phone-number-input" @bind-Value="@PhoneNumberModel.Number" placeholder="Ex. (123) 456-7890" class="form-control" aria-describedby="phone-number-input-help"/>
                            <small id="phone-number-input-help" class="text-muted">Optional. Must be in US standard format.</small>
                            <ValidationMessage For="@(() => PhoneNumberModel.Number)" class="text-danger"/>
                        </div>

                    </EditForm>

                </FormWizardStep>

                <FormWizardStep Name="Address">

                    <EditForm Model="AddressModel">
                        <DataAnnotationsValidator/>

                        <div class="form-group">
                            <label for="street-name-input">Street Name</label>
                            <InputText id="street-name-input" @bind-Value="@AddressModel.StreetName" placeholder="EG. Main Street" class="form-control"/>
                            <ValidationMessage For="@(() => AddressModel.StreetName)" class="text-danger"/>
                        </div>

                        <div class="form-group">
                            <label for="house-number-input">House Number</label>
                            <InputText id="house-number-input" @bind-Value="@AddressModel.HouseNumber" placeholder="EG. 6A" class="form-control"/>
                            <ValidationMessage For="@(() => AddressModel.HouseNumber)" class="text-danger"/>
                        </div>

                        <div class="form-group">
                            <label for="town-input">Town</label>
                            <InputText id="town-input" @bind-Value="@AddressModel.Town" placeholder="EG. Amityville" class="form-control"/>
                            <ValidationMessage For="@(() => AddressModel.Town)" class="text-danger"/>
                        </div>

                        <div class="form-group">
                            <label for="state-input">State</label>
                            <InputText id="state-input" @bind-Value="@AddressModel.State" placeholder="EG. Washington" class="form-control"/>
                            <ValidationMessage For="@(() => AddressModel.State)" class="text-danger"/>
                        </div>

                        <div class="form-group">
                            <label for="zip-code-input">ZIP Code</label>
                            <InputText id="zip-code-input" @bind-Value="@AddressModel.ZipCode" placeholder="EG. 51210" class="form-control"/>
                            <ValidationMessage For="@(() => AddressModel.ZipCode)" class="text-danger"/>
                        </div>

                    </EditForm>

                </FormWizardStep>
            </FormWizard>
        }

        @if (OperationStatus == OperationStatus.Pending)
        {
            <div class="row">
                <div class="col-12 d-flex justify-content-center mb-2">
                    <div id="loading"></div>

                </div>
            </div>

            <div class="row">
                <div class="col-12 d-flex justify-content-center">
                    <small class="text-muted">Please wait...</small>
                </div>
            </div>
        }

        @if (OperationStatus == OperationStatus.Success)
        {
            <div class="row">
                <div class="col-12 d-flex justify-content-center mb-2">
                    <h3>Success!</h3>
                </div>
            </div>

            <div class="row">
                <div class="col-12 d-flex justify-content-center">
                    <p class="text-info">We'll redirect you in a second.</p>
                </div>
            </div>
        }

        @if (OperationStatus == OperationStatus.Error)
        {
            <div class="row">
                <div class="col-12 d-flex justify-content-center mb-2">
                    <h3>Error</h3>
                </div>
            </div>

            <div class="row">
                <div class="col-12 d-flex justify-content-center">
                    <p class="text-danger">An error has occurred.</p>
                </div>
            </div>
        }

    </div>
</div>