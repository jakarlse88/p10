@using Abarnathy.BlazorClient.Client.Models

@page "/patient/{Id:int}"

<div class="container">


    <div class="row">
        <div class="col-12 d-flex justify-content-center">
            <h2>View/Edit Patient Demographcis</h2>
        </div>
    </div>

    @if (OperationStatus == OperationStatus.Pending)
    {
        <div class="row">
            <div class="col-12 d-flex justify-content-center">
                <p>Loading...</p>
            </div>
        </div>
    }

    @if (OperationStatus == OperationStatus.Success && Model != null)
    {
        <button class="btn btn-dark btn-small">Toggle Edit</button>
        
        <EditForm Model="Model">

            <DataAnnotationsValidator/>

            <div class="form-group">
                <label for="given-name-input">Given Name</label>
                <InputText id="given-name-input" @bind-Value="@Model.GivenName" placeholder="Given Name" class="form-control"/>
                <ValidationMessage For="@(() => Model.GivenName)" class="text-danger"/>
            </div>

            <div class="form-group">
                <label for="family-name-input">Family Name</label>
                <InputText id="family-name-input" @bind-Value="@Model.FamilyName" placeholder="Family Name" class="form-control"/>
                <ValidationMessage For="@(() => Model.FamilyName)" class="text-danger"/>
            </div>

            <div class="form-group">
                <label for="date-of-birth-input">Date of Birth</label>
                <InputDate id="date-of-birth-input" @bind-Value="@Model.DateOfBirth" placeholder="DD/MM/YYYY" class="form-control" aria-describedby="date-of-birth-input-help"/>
                <small id="date-of-birth-input-help" class="text-muted">DD/MM/YYYY</small>
                <ValidationMessage For="@(() => Model.DateOfBirth)" class="text-danger"/>
            </div>

            <div class="form-group">
                <label for="sex-input">Sex</label>
                <InputSelect id="sex-input" @bind-Value="@Model.Sex" class="form-control">
                    <option value="@SexEnum.Male">Male</option>
                    <option value="@SexEnum.Female">Female</option>
                </InputSelect>
                <ValidationMessage For="@(() => Model.Sex)" class="text-danger"/>
            </div>
        </EditForm>
        <div class="row">
            <div class="col-8">
                <EditForm Model="PhoneNumberModel">

                    <DataAnnotationsValidator/>

                    <div class="form-group">
                        <label for="phone-number-input">Telephone Number</label>
                        <InputText id="phone-number-input" @bind-Value="@PhoneNumberModel.Number" placeholder="Ex. (123) 456-7890" class="form-control" aria-describedby="phone-number-input-help"/>
                        <small id="phone-number-input-help" class="text-muted">Optional. Must be in US standard format.</small>
                        <ValidationMessage For="@(() => PhoneNumberModel.Number)" class="text-danger"/>
                    </div>

                    <button class="btn btn-sm btn-primary" @onclick="@AddPhoneNumber">Add</button>

                </EditForm>
            </div>

            <div class="col-4">
                <h5>Added Phone Numbers</h5>
                <ul>
                    @foreach (var item in AddedPhoneNumbers)
                    {
                        <li>@item.Number</li>
                    }
                </ul>
            </div>
        </div>

        <div class="row">
            <div class="col-8">
                <EditForm Model="AddressModel">
                    <DataAnnotationsValidator/>

                    <div class="form-group">
                        <label for="street-name-input">Street Name</label>
                        <InputText id="street-name-input" @bind-Value="@AddressModel.StreetName" placeholder="EG. Main Street" class="form-control"/>
                        <ValidationMessage For="@(() => AddressModel.StreetName)" class="text-danger"/>
                    </div>

                    <div class="form-group">
                        <label for="house-number-input">House Number</label>
                        <InputText id="house-number-input" @bind-Value="@AddressModel.HouseNumber" placeholder="EG. 6A" class="form-control"/>
                        <ValidationMessage For="@(() => AddressModel.HouseNumber)" class="text-danger"/>
                    </div>

                    <div class="form-group">
                        <label for="town-input">Town</label>
                        <InputText id="town-input" @bind-Value="@AddressModel.Town" placeholder="EG. Amityville" class="form-control"/>
                        <ValidationMessage For="@(() => AddressModel.Town)" class="text-danger"/>
                    </div>

                    <div class="form-group">
                        <label for="state-input">State</label>
                        <InputText id="state-input" @bind-Value="@AddressModel.State" placeholder="EG. Washington" class="form-control"/>
                        <ValidationMessage For="@(() => AddressModel.State)" class="text-danger"/>
                    </div>

                    <div class="form-group">
                        <label for="zip-code-input">ZIP Code</label>
                        <InputText id="zip-code-input" @bind-Value="@AddressModel.ZipCode" placeholder="EG. 51210" class="form-control"/>
                        <ValidationMessage For="@(() => AddressModel.ZipCode)" class="text-danger"/>
                    </div>


                    <button class="btn btn-small btn-primary" @onclick="@AddAddress">Add</button>
                </EditForm>
            </div>
            <div class="col-4">
                <h5>Added Addresses</h5>
                <ul>
                    @foreach (var item in AddedAddressModels)
                    {
                        <li>@item.StreetName @item.HouseNumber, @item.Town</li>
                    }
                </ul>
            </div>
        </div>


        @if (EnableEdit)
        {
            <button class="btn btn-success" disabled="@(!EnableEdit)">Submit</button>
        }
    }

    @if (OperationStatus == OperationStatus.Success && Model == null)
    {
        <div class="row">
            <div class="col-12 d-flex justify-content-center">
                <p>No patient was found matching the given ID.</p>
            </div>
        </div>
    }

    @if (OperationStatus == OperationStatus.Error)
    {
        <div class="row">
            <div class="col-12 d-flex justify-content-center">
                <p>There was an error loading the patient data.</p>
            </div>
        </div>
    }

</div>